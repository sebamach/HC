#FFFFFF# Create your views here.
from models import *
from forms import *
from abm.funciones import *
from django.contrib.auth.models import *
from django.http import HttpResponse, HttpResponseRedirect
from django.shortcuts import render_to_response, get_object_or_404
from django.template import RequestContext
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth import login, authenticate, logout
from django.contrib.auth.decorators import login_required
from stronghold.decorators import public
from django.contrib.auth.decorators import permission_required
import string
import random


def id_generator(size=6, chars=string.ascii_uppercase + string.digits):
	return ''.join(random.choice(chars) for x in range(size))

def coor_generator(size=2, chars=string.ascii_uppercase + string.digits):
	return ''.join(random.choice(chars) for x in range(size))
	
def nuevo_usuario(request):
	clave=''
	errores=[]
	sucesos=[]
	matriz=[]
	if request.user.has_perm('usuarios.add_usuario'):
		if request.method=='POST':
			formulario_user=PartialUsuarioForm(request.POST)
			formulario_perfil=PerfilForm()
			tarjeta = TarjetaForm()
			if formulario_user.is_valid():
				matriz = generar_matriz()
				clave = id_generator()
				if not Perfil.objects.filter(persona=Persona.objects.get(id=request.session['persona'])):
					usuario = User.objects.create_user(request.POST['username'], '', clave)
					perfil = formulario_perfil.save(commit=False)
					tarjeta = tarjeta.save(commit=False)
					perfil.usuario = usuario
					perfil.persona = Persona.objects.get(id=request.session['persona'])
					perfil.save()
					tarjeta.usuario = usuario
					tarjeta.cordenadas = matriz
					sucesos.append('anduvo todo piola vago')
					return HttpResponseRedirect('/datos2/lista/persona')
				else:
					errores.append ('ya Existe un usaurio para esa persona')
			else:
				errores.append('Nombre de usuario no valido')
			return render_to_response('formulario_usuarios.html', {'formulario': PartialUsuarioForm,  'nombre': "Usuarios",'n': "usuario", 'modulo': "usuario", 'errores':errores}, context_instance=RequestContext(request))
		else:
			formulario_user=PartialUsuarioForm()
			
		return render_to_response('formulario_usuarios.html', {'errores':errores,'formulario': PartialUsuarioForm,  'nombre': "Usuarios",'n': "usuario", 'modulo': "usuario",}, context_instance=RequestContext(request))
	else:
		return HttpResponseRedirect('/403')
		
	

def lista_(request):
	return lista(request,User,'lista_usuarios.html')
	

def editar_(request, modelo, id_user):
	if request.user.has_perm('usuarios.change_usuario'):
		return editar(request, id_user, User, Perfil,"usuarios",'formulario_datos.html') 
	else:
		return HttpResponseRedirect('/403')
		
@permission_required('usuarios.can_change','/403')
def bloqueo_usuario(request,modelo,id_user):
	dato= User.objects.get(id=id_user)
	if dato.is_active == 1:
		dato.is_active =0
	else:
		dato.is_active=1
	dato.save()
	return lista(request,User,'lista_usuarios.html')
	
@public
def login_usuario(request):
	if request.method=='POST':
		formulario= AuthenticationForm(request.POST)
		usuario= request.POST['username']
		clave= request.POST['password']
		acceso=authenticate(username=usuario,password=clave)
		if acceso is not None:
			if acceso.is_active:
				login(request,acceso)
				return HttpResponseRedirect('/')
			
			
	else:
		formulario=AuthenticationForm()
	return render_to_response('login_usuarios.html', {'formulario': formulario}, context_instance=RequestContext(request))
	

def logout_view(request):
	logout(request)
	return HttpResponseRedirect('/')

def generar_matriz():
	matriz=[]
	for i in range (10):
		for j in range (10):
			matriz.append(coor_generator())
	return matriz
